services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app  # Mount entire source including tools
      - kv_store:/app/var
    environment:
      - REDIS_HOST=redis
      - OLLAMA_HOST=http://ollama:11434
    depends_on:
      redis:
        condition: service_started
      ollama:
        condition: service_started

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: dendrite
      POSTGRES_USER: dendrite
      POSTGRES_PASSWORD: dendrite_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      redis:
        condition: service_started
      ollama:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      OLLAMA_HOST: http://ollama:11434
      OLLAMA_MODEL: mistral
      POSTGRES_HOST: postgres
      POSTGRES_DB: dendrite
      POSTGRES_USER: dendrite
      POSTGRES_PASSWORD: dendrite_pass
    volumes:
      - .:/app
    command: pytest

volumes:
  redis_data:
  postgres_data:
  ollama_data:
  kv_store:
